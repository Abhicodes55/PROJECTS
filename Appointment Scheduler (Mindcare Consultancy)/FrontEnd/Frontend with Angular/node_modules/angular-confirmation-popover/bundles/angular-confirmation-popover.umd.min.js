!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("positioning")):"function"==typeof define&&define.amd?define("angular-confirmation-popover",["exports","@angular/core","@angular/common","positioning"],e):e((t=t||self)["angular-confirmation-popover"]={},t.ng.core,t.ng.common,t.positioning)}(this,(function(t,e,n,o){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};Object.create;Object.create;var r=function(){this.confirmText="Confirm",this.cancelText="Cancel",this.confirmButtonType="success",this.cancelButtonType="outline-secondary",this.placement="top",this.hideConfirmButton=!1,this.hideCancelButton=!1,this.popoverClass="",this.appendToBody=!1,this.reverseButtonOrder=!1,this.closeOnOutsideClick=!0};r.decorators=[{type:e.Injectable}];var p=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}(e,t),e}(r);p.decorators=[{type:e.Injectable}];var s=function(){function t(t){this.options=t}return t.prototype.ngAfterViewInit=function(){this.options.onAfterViewInit()},t}();s.decorators=[{type:e.Component,args:[{selector:"mwl-confirmation-popover-window",template:'<ng-template #defaultTemplate let-options="options">\n  <div\n    [ngClass]="[\n      \'popover\',\n      options.placement,\n      \'popover-\' + options.placement,\n      \'bs-popover-\' + options.placement,\n      options.popoverClass\n    ]"\n  >\n    <div class="popover-arrow arrow"></div>\n    <h3\n      class="popover-title popover-header"\n      [innerHTML]="options.popoverTitle"\n    ></h3>\n    <div class="popover-content popover-body">\n      <p [innerHTML]="options.popoverMessage"></p>\n      <div\n        class="confirm-btns"\n        [class.confirm-btns-reversed]="options.reverseButtonOrder"\n      >\n        <div class="confirm-btn-container" *ngIf="!options.hideCancelButton">\n          <button\n            type="button"\n            [mwlFocus]="options.focusButton === \'cancel\'"\n            [class]="\'btn btn-block btn-\' + options.cancelButtonType"\n            (click)="options.onCancel({ clickEvent: $event })"\n            [innerHtml]="options.cancelText"\n          ></button>\n        </div>\n        <div class="confirm-btn-container" *ngIf="!options.hideConfirmButton">\n          <button\n            type="button"\n            [mwlFocus]="options.focusButton === \'confirm\'"\n            [class]="\'btn btn-block btn-\' + options.confirmButtonType"\n            (click)="options.onConfirm({ clickEvent: $event })"\n            [innerHtml]="options.confirmText"\n          ></button>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>\n<ng-template\n  [ngTemplateOutlet]="options.customTemplate || defaultTemplate"\n  [ngTemplateOutletContext]="{ options: options }"\n>\n</ng-template>\n',styles:[".popover{display:block}.bs-popover-bottom .arrow,.bs-popover-top .arrow{left:50%}.bs-popover-left .arrow,.bs-popover-right .arrow{top:calc(50% - 8px)}.btn{transition:none}.confirm-btns{display:flex;justify-content:space-around}.confirm-btn-container{flex-basis:50%}.confirm-btn-container:not(:first-child){margin-left:4px}.confirm-btn-container:not(:last-child){margin-right:4px}.confirm-btns-reversed{flex-direction:row-reverse}.confirm-btns-reversed .confirm-btn-container:not(:first-child){margin-left:0;margin-right:4px}.confirm-btns-reversed .confirm-btn-container:not(:last-child){margin-left:4px;margin-right:0}"]}]}],s.ctorParameters=function(){return[{type:p}]};var c=function(){function t(t,n,o,i,r){this.viewContainerRef=t,this.elm=n,this.defaultOptions=o,this.cfr=i,this.renderer=r,this.isDisabled=!1,this.isOpen=!1,this.isOpenChange=new e.EventEmitter(!0),this.confirm=new e.EventEmitter,this.cancel=new e.EventEmitter,this.eventListeners=[]}return t.prototype.ngOnInit=function(){this.isOpenChange.emit(!1)},t.prototype.ngOnChanges=function(t){t.isOpen&&(!0===t.isOpen.currentValue?this.showPopover():this.hidePopover())},t.prototype.ngOnDestroy=function(){this.hidePopover()},t.prototype.onConfirm=function(t){this.confirm.emit(t),this.hidePopover()},t.prototype.onCancel=function(t){this.cancel.emit(t),this.hidePopover()},t.prototype.togglePopover=function(){this.popover?this.hidePopover():this.showPopover()},t.prototype.onDocumentClick=function(t){var e=void 0!==this.closeOnOutsideClick?this.closeOnOutsideClick:this.defaultOptions.closeOnOutsideClick;this.popover&&!this.elm.nativeElement.contains(t.target)&&!this.popover.location.nativeElement.contains(t.target)&&e&&this.hidePopover()},t.prototype.showPopover=function(){var t=this;if(!this.popover&&!this.isDisabled){setTimeout((function(){t.eventListeners=[t.renderer.listen("document","click",(function(e){return t.onDocumentClick(e)})),t.renderer.listen("document","touchend",(function(e){return t.onDocumentClick(e)})),t.renderer.listen("window","resize",(function(){return t.positionPopover()}))]}));var n=new p;Object.assign(n,this.defaultOptions,{onConfirm:function(e){t.onConfirm(e)},onCancel:function(e){t.onCancel(e)},onAfterViewInit:function(){t.positionPopover()}});["confirmText","cancelText","placement","confirmButtonType","cancelButtonType","focusButton","hideConfirmButton","hideCancelButton","popoverClass","appendToBody","customTemplate","reverseButtonOrder","popoverTitle","popoverMessage"].forEach((function(e){void 0!==t[e]&&(n[e]=t[e])}));var o=this.cfr.resolveComponentFactory(s),i=e.Injector.create({providers:[{provide:p,useValue:n}]});this.popover=this.viewContainerRef.createComponent(o,this.viewContainerRef.length,i),n.appendToBody&&document.body.appendChild(this.popover.location.nativeElement),this.isOpenChange.emit(!0)}},t.prototype.positionPopover=function(){if(this.popover){var t=this.popover.location.nativeElement.children[0];o.positionElements(this.elm.nativeElement,t,this.placement||this.defaultOptions.placement,this.appendToBody||this.defaultOptions.appendToBody)}},t.prototype.hidePopover=function(){this.popover&&(this.popover.destroy(),delete this.popover,this.isOpenChange.emit(!1),this.eventListeners.forEach((function(t){return t()})),this.eventListeners=[])},t}();c.decorators=[{type:e.Directive,args:[{selector:"[mwlConfirmationPopover]"}]}],c.ctorParameters=function(){return[{type:e.ViewContainerRef},{type:e.ElementRef},{type:r},{type:e.ComponentFactoryResolver},{type:e.Renderer2}]},c.propDecorators={popoverTitle:[{type:e.Input}],popoverMessage:[{type:e.Input}],confirmText:[{type:e.Input}],cancelText:[{type:e.Input}],placement:[{type:e.Input}],confirmButtonType:[{type:e.Input}],cancelButtonType:[{type:e.Input}],focusButton:[{type:e.Input}],hideConfirmButton:[{type:e.Input}],hideCancelButton:[{type:e.Input}],isDisabled:[{type:e.Input}],isOpen:[{type:e.Input}],customTemplate:[{type:e.Input}],isOpenChange:[{type:e.Output}],confirm:[{type:e.Output}],cancel:[{type:e.Output}],popoverClass:[{type:e.Input}],appendToBody:[{type:e.Input}],reverseButtonOrder:[{type:e.Input}],closeOnOutsideClick:[{type:e.Input}],togglePopover:[{type:e.HostListener,args:["click"]}]};var a=function(){function t(t){this.elm=t}return t.prototype.ngOnChanges=function(t){t.mwlFocus&&!0===this.mwlFocus&&this.elm.nativeElement.focus()},t}();a.decorators=[{type:e.Directive,args:[{selector:"[mwlFocus]"}]}],a.ctorParameters=function(){return[{type:e.ElementRef}]},a.propDecorators={mwlFocus:[{type:e.Input}]};var u=new e.InjectionToken("confirmation popover user options");function l(t){var e=new r;return Object.assign(e,t),e}var f=function(){function t(){}return t.forRoot=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[{provide:u,useValue:e},{provide:r,useFactory:l,deps:[u]}]}},t}();f.decorators=[{type:e.NgModule,args:[{declarations:[c,s,a],imports:[n.CommonModule],exports:[c,a],entryComponents:[s]}]}],t.ConfirmationPopoverDirective=c,t.ConfirmationPopoverModule=f,t.FocusDirective=a,t.ɵa=u,t.ɵb=l,t.ɵc=r,t.ɵd=s,t.ɵe=p,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-confirmation-popover.umd.min.js.map